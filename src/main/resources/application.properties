spring.application.name=sistema-propostas

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
logging.level.org.springframework.web=INFO

spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update

spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/keycloak
spring.datasource.username=keycloak
spring.datasource.password=password

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

##spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:todos}
##spring.datasource.username=${RDS_USERNAME:todos-user}
##spring.datasource.password=${RDS_PASSWORD:dummytodos}
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

jwt.secret=SequenciaDeCaracteresParaAssinarToken
jwt.expiration = 6000000000

endereco-solicitacao-financeira.base-url = http://localhost:9999/
endereco-cartoes.base-url = http://localhost:8888/
enderecos-internos.base-url = http://localhost:8080/

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

periodicidade.minha-tarefa=${PERIODICIDADE_MINHA_TAREFA:1000}
#scheduler
periodicidade.associa-proposta-cartao = 1000000

management.endpoints.web.exposure.include=prometheus,metrics,health

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}